spring:
  application:
    name: sharding-jdbc
  shardingsphere:
    datasource: #数据源配置，可配置多个data_source_name
      names: ds0,ds1,ds0-slave,ds1-slave
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/order_db?characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull
        username: root
        password: 19970806
      ds0-slave:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/order_db_slave?characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull
        username: root
        password: 19970806
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/order_db1?characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull
        username: root
        password: 19970806
      ds1-slave:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/order_db_slave1?characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull
        username: root
        password: 19970806
    sharding:
      tables:
        t_order:
          actualDataNodes: ms_ds$->{0..1}.t_order_$->{1..3}
          tableStrategy:
            inline:
              shardingColumn: order_id
              algorithmExpression: t_order_$->{order_id % 3 + 1}
          keyGenerator:
            type: SNOWFLAKE
            column: order_id
        t_config:
          keyGenerator:
            type: SNOWFLAKE
            column: key1
      binding-tables:
        - t_order
      broadcastTables:
        - t_config
      default-database-strategy:
        inline:
          sharding-column: user_id
          algorithm-expression: ms_ds$->{user_id % 2}
      masterSlaveRules:
        ms_ds0:
          masterDataSourceName: ds0
          slaveDataSourceNames:
            - ds0-slave
          loadBalanceAlgorithmType: ROUND_ROBIN
        ms_ds1:
          masterDataSourceName: ds1
          slaveDataSourceNames:
            - ds1-slave
          loadBalanceAlgorithmType: ROUND_ROBIN
    props:
      sql:
        show: true
  main:
    allow-bean-definition-overriding: true
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: admin
        login-password: admin
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true


#mybatis
mybatis-plus:
  mapper-locations: classpath*:/mapper/*.xml
  typeAliasesPackage: cn.ponytech.pojo.*.*
  global-config:
    db-config:
      id-type: none
      field-strategy: NOT_NULL
      table-underline: true
      logic-delete-value: -2
      logic-not-delete-value: 0
    banner: false
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
    jdbc-type-for-null: 'null'
logging:
  level:
    root: info
    org.springframework.web: info
    druid.sql: debug